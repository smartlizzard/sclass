for sa in $(kubectl get sa -n argocd -o jsonpath='{.items[*].metadata.name}'); do
    kubectl patch sa $sa -n argocd --type=merge -p '{
        "metadata": {
            "labels": {
                "app.kubernetes.io/managed-by": "Helm"
            },
            "annotations": {
                "meta.helm.sh/release-name": "argocd-self-managed",
                "meta.helm.sh/release-namespace": "argocd"
            }
        }
    }'
done

for secret in $(kubectl get secret -n argocd -o jsonpath='{.items[*].metadata.name}'); do
    kubectl patch secret $secret -n argocd --type=merge -p '{
        "metadata": {
            "labels": {
                "app.kubernetes.io/managed-by": "Helm"
            },
            "annotations": {
                "meta.helm.sh/release-name": "argocd-self-managed",
                "meta.helm.sh/release-namespace": "argocd"
            }
        }
    }'
done

for cm in $(kubectl get cm -n argocd -o jsonpath='{.items[*].metadata.name}'); do
    kubectl patch cm $cm -n argocd --type=merge -p '{
        "metadata": {
            "labels": {
                "app.kubernetes.io/managed-by": "Helm"
            },
            "annotations": {
                "meta.helm.sh/release-name": "argocd-self-managed",
                "meta.helm.sh/release-namespace": "argocd"
            }
        }
    }'
done

for crd in $(kubectl get crd | grep argoproj.io | awk '{print $1}'); do
    kubectl patch crd $crd -n argocd --type=merge -p '{
        "metadata": {
            "labels": {
                "app.kubernetes.io/managed-by": "Helm"
            },
            "annotations": {
                "meta.helm.sh/release-name": "argocd-self-managed",
                "meta.helm.sh/release-namespace": "argocd"
            }
        }
    }'
done

Error: INSTALLATION FAILED: Unable to continue with install: ClusterRole "argocd-self-managed-application-controller" in namespace "" exists and cannot be imported into the current release: invalid ownership metadata; annotation validation error: missing key "meta.helm.sh/release-name": must be set to "argocd-self-managed"; annotation validation error: missing key "meta.helm.sh/release-namespace": must be set to "argocd"
user@cd873a06

kubectl patch ClusterRole argocd-self-managed-application-controller -n argocd --type=merge -p '{
    "metadata": {
        "labels": {
            "app.kubernetes.io/managed-by": "Helm"
        },
        "annotations": {
            "meta.helm.sh/release-name": "argocd-self-managed",
            "meta.helm.sh/release-namespace": "argocd"
        }
    }
}'


kubectl patch ClusterRole argocd-self-managed-notifications-controller -n argocd --type=merge -p '{
    "metadata": {
        "labels": {
            "app.kubernetes.io/managed-by": "Helm"
        },
        "annotations": {
            "meta.helm.sh/release-name": "argocd-self-managed",
            "meta.helm.sh/release-namespace": "argocd"
        }
    }
}'


kubectl patch ClusterRole argocd-self-managed-server -n argocd --type=merge -p '{
    "metadata": {
        "labels": {
            "app.kubernetes.io/managed-by": "Helm"
        },
        "annotations": {
            "meta.helm.sh/release-name": "argocd-self-managed",
            "meta.helm.sh/release-namespace": "argocd"
        }
    }
}'



kubectl patch ClusterRoleBinding argocd-self-managed-application-controller -n argocd --type=merge -p '{
    "metadata": {
        "labels": {
            "app.kubernetes.io/managed-by": "Helm"
        },
        "annotations": {
            "meta.helm.sh/release-name": "argocd-self-managed",
            "meta.helm.sh/release-namespace": "argocd"
        }
    }
}'


kubectl patch ClusterRoleBinding argocd-self-managed-notifications-controller -n argocd --type=merge -p '{
    "metadata": {
        "labels": {
            "app.kubernetes.io/managed-by": "Helm"
        },
        "annotations": {
            "meta.helm.sh/release-name": "argocd-self-managed",
            "meta.helm.sh/release-namespace": "argocd"
        }
    }
}'


kubectl patch ClusterRoleBinding argocd-self-managed-server -n argocd --type=merge -p '{
    "metadata": {
        "labels": {
            "app.kubernetes.io/managed-by": "Helm"
        },
        "annotations": {
            "meta.helm.sh/release-name": "argocd-self-managed",
            "meta.helm.sh/release-namespace": "argocd"
        }
    }
}'

kubectl patch Role argocd-self-managed-applicationset-controller -n argocd --type=merge -p '{
    "metadata": {
        "labels": {
            "app.kubernetes.io/managed-by": "Helm"
        },
        "annotations": {
            "meta.helm.sh/release-name": "argocd-self-managed",
            "meta.helm.sh/release-namespace": "argocd"
        }
    }
}'


kubectl patch Role argocd-self-managed-notifications-controller -n argocd --type=merge -p '{
    "metadata": {
        "labels": {
            "app.kubernetes.io/managed-by": "Helm"
        },
        "annotations": {
            "meta.helm.sh/release-name": "argocd-self-managed",
            "meta.helm.sh/release-namespace": "argocd"
        }
    }
}'


kubectl patch Role argocd-self-managed-server -n argocd --type=merge -p '{
    "metadata": {
        "labels": {
            "app.kubernetes.io/managed-by": "Helm"
        },
        "annotations": {
            "meta.helm.sh/release-name": "argocd-self-managed",
            "meta.helm.sh/release-namespace": "argocd"
        }
    }
}'




cd /home/user/assignment

docker run -d --name nginx-logging-local --log-driver local -p 80:80 nginx

sudo chown -R USER:USER /home/user/assignment

docker ps -qf "name=actual-container-name" > /home/user/assignment/container_id.txt

docker inspect nginx-logging-local --format '{{json .HostConfig.LogConfig}}' > /home/user/assignment/container_inspect_output.txt

